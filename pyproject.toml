[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fwheel"
dynamic = ["version"]
description = 'fwheel generates fat wheel similar to fat jar in java'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["cli", "fwheel", "py-tools", "python", "wheel", "packaging"]
authors = [
    { name = "Ashish Patel", email = "ashishpatel0720@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
    "click",
    "rich",
    "tomli",
    "packaging",
    "yaspin",
    "requests",
    "jinja2",
    "pkginfo",
    "pyyaml"
]

[project.urls]
Documentation = "https://fwheel.readthedocs.io"
Issues = "https://github.com/pateash/fwheel/issues"
Source = "https://github.com/pateash/fwheel"

# to make sure the default env is in same repo ( for Intellij to refer )
[tool.hatch.envs.default]
type = "virtual"
path = "venv"
python = "3.8"

[tool.hatch.envs.default.scripts]
deps = "echo 'Syncing Default Dependencies\n=========================='"

[project.scripts]
fwheel = "fwheel.cli:cli"

[tool.hatch.version]
path = "src/fwheel/__about__.py"


[tool.coverage.run]
source_pkgs = ["fwheel", "tests"]
branch = true
parallel = true
omit = [
    "src/fwheel/__about__.py",
    "src/fwheel/__main__.py",
]

[tool.coverage.paths]
fwheel = ["src/fwheel", "*/fwheel/src/fwheel"]
tests = ["tests", "*/fwheel/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

## STYLING ( commenting in favour of `hatch fmt`
# creating an env for styling and use it to fix

[tool.sphinx]
builders = ["html"]
source-dir = "docs/source"
build-dir = "docs/build"

[tool.hatch.envs.dev]
dependencies = [
    "black",
    "pre-commit",
    "mypy>=1.0.0",
    "coverage",
    "pytest",
    "pypi-cleanup",
]
[tool.hatch.envs.dev.scripts]
lint = "black --check src/ tests/"
fix = "black -v src/ tests/"
check = "mypy --install-types --non-interactive {args:src/fwheel tests}"
cov-xml = "coverage xml"
pypi-clean = "pypi-cleanup -u pateash -p fwheel --do-it" # deletes dev version from fwheel
deps = "echo 'Syncing Dev Dependencies\n============='"


[tool.hatch.envs.docs]
dependencies = [
    "sphinx-autobuild",
    "sphinx",
    "sphinx-docsearch",
    "sphinx-click",
    "shibuya",
    "sphinx-notfound-page",
    "sphinx-copybutton",
    "cowsay"
]
[tool.hatch.envs.docs.scripts]
# --pre-build makes sure we get latest changes even if we modify something in
docs = "sphinx-autobuild -a --port=0 --open-browser docs/source docs/build --watch src/fwheel --pre-build 'rm -rf docs/build'"
deps = "echo 'Syncing Docs Dependencies\n============='"
docs-deps = "python docs/hatch-env-docs-requirements-sync.py"
